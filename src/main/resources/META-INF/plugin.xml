<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.cppcxy.Intellij-SumnekoLua</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>SumnekoLua</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="" url="">CppCXY</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    <strong>SumnekoLua plugin for Intellij.</strong>
    <br>
    <strong>the Lua language server provides various language features for Lua to make development easier and faster.
     With around half a million installs on Visual Studio Code, it is the most popular extension for Lua language support.</strong>
    <br>
    <strong>Features:</strong>
    <ul>
        <li> ⚙️ Supports <strong>Lua 5.4</strong>, <strong>Lua 5.3</strong>, <strong>Lua 5.2</strong>, <strong>Lua 5.1</strong>, and <strong>LuaJIT</strong> </li>
        <li> 📄 Over 20 supported <a href="https://github.com/LuaLS/lua-language-server/wiki/Annotations">annotations</a> for documenting your code </li>
        <li> ↪ Go to definition </li>
        <li> 🦺 Dynamic <a href="https://github.com/LuaLS/lua-language-server/wiki/Type-Checking">type checking</a> </li>
        <li> 🔍 Find references </li>
        <li> ⚠️ <a href="https://github.com/LuaLS/lua-language-server/wiki/Diagnostics"> Diagnostics/Warnings </a></li>
        <li> 🕵️ <a href="https://github.com/LuaLS/lua-language-server/wiki/Syntax-Errors">Syntax checking </a> </li>
        <li> 📝 Element renaming </li>
        <li> 🗨️ Hover to view details on variables, functions, and more </li>
        <li> 🖊️ Autocompletion </li>
        <li> 📚 Support for <a href="https://github.com/LuaLS/lua-language-server/wiki/Libraries">libraries</a> </li>
        <li> 💅 <a href="https://github.com/LuaLS/lua-language-server/wiki/Formatter">Code formatting </a> </li>
        <li> 💬 <a href="https://github.com/LuaLS/lua-language-server/wiki/Formatter">Spell checking </a> </li>
        <li> 🛠️ Custom <a href="https://github.com/LuaLS/lua-language-server/wiki/Plugins">plugins </a> </li>
        <li> 📖 <a href="https://github.com/LuaLS/lua-language-server/wiki/Export-Documentation"> Documentation Generation </a> </li>
    </ul>

    <strong>for document see <a href="https://github.com/LuaLS/lua-language-server">here</a></strong>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.ultimate</depends>
    <idea-version since-build="223.2"/>
    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="lua"
                  implementationClass="com.tang.intellij.lua.lang.LuaFileType"
                  fieldName="INSTANCE"
                  extensions="lua"
                  language="Lua"/>

        <!--        folding-->
        <lang.foldingBuilder language="Lua" implementationClass="com.tang.intellij.lua.folding.LuaFoldingBuilder"/>
        <lang.foldingBuilder language="Lua" implementationClass="com.tang.intellij.lua.folding.LuaRegionFoldingBuilder"/>

        <lang.parserDefinition language="Lua" implementationClass="com.tang.intellij.lua.lang.LuaParserDefinition"/>
        <lang.braceMatcher language="Lua" implementationClass="com.tang.intellij.lua.braces.LuaBraceMatcher"/>
        <lang.quoteHandler language="Lua" implementationClass="com.tang.intellij.lua.codeInsight.editorActions.LuaQuoteHandler"/>
        <customPasteProvider implementation="com.tang.intellij.lua.codeInsight.editorActions.StringLiteralPasteProvider"/>

        <!--        highlight-->
        <lang.syntaxHighlighterFactory
                language="Lua"
                implementationClass="com.tang.intellij.lua.highlighting.LuaSyntaxHighlighterFactory"/>
        <highlightErrorFilter implementation="com.tang.intellij.lua.highlighting.LuaHighlightErrorFilter"/>
        <annotator language="Lua" implementationClass="com.tang.intellij.lua.annotator.LuaAnnotator"/>

        <highlightUsagesHandlerFactory
                implementation="com.tang.intellij.lua.codeInsight.highlighting.LuaHighlightUsagesHandlerFactory"/>

        <readWriteAccessDetector implementation="com.tang.intellij.lua.codeInsight.LuaReadWriteAccessDetector"/>
        <platform.lsp.serverSupportProvider implementation="com.cppcxy.ide.lsp.SumnekoLspServerSupportProvider"/>

        <!-- for displaying the statusbar icon -->
    </extensions>
</idea-plugin>